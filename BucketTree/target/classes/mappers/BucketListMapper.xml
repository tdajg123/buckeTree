<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.ac.BucketTree.BucketListMapper">

	<!-- ##버킷리스트 전체 목록(list.jsp) 시작...## -->
	<!-- 버킷리스트 전체 목록 &정렬&검색 -->
	<select id="list" resultType="kr.ac.BucketTree.vo.BucketListVO"
		parameterType="hashmap">

		<![CDATA[
		
SELECT *
FROM 
(
SELECT b.*,u.name, CASE #{pagination.orderType}
				   WHEN 1 THEN ROW_NUMBER() OVER(ORDER BY b.date desc)
				   WHEN 2 THEN ROW_NUMBER() OVER(ORDER BY b.count desc)
				END 행번호
				,(select top 1 idx from image where idx IN (SELECT image_idx FROM BucketList_Image where bucket_idx=b.idx)) as 'imageIdx'
				FROM [BucketList] b join [User] u ON b.user_idx=u.idx 
WHERE 
	 (
     (#{pagination.srchType}= 0) OR /*검색조건이 없을때 */  /*검색조건이 없을때 */
	 (#{pagination.srchType}= 1  AND CHARINDEX(#{pagination.srchText},title)>=1) OR /*타이틀검색*/
	 (#{pagination.srchType}= 2 AND CHARINDEX(#{pagination.srchText},u.name)=1) 
	 )  /*이름 검색*/
     
	 and 
		(
		(#{pagination.categoryType}=0) OR
		(#{pagination.categoryType}=1 AND[when]=#{pagination.when} and [who]=#{pagination.who} and [what]=#{pagination.what})
		) /*카테고리검색*/
	 and (
		  (b.user_idx =#{user_idx}) OR  /*내가 쓴건 다보여야함*/
		  (b.writer=0) OR  /*전체보기*/
		  (b.writer=1 AND b.user_idx IN (select fromUser from Friend WHERE state=1  AND toUser=#{user_idx}) )OR /*친구보기*/
	      (b.writer=2 AND b.user_idx = #{user_idx})
	      )  /*나만보기*/
) subquery
WHERE 행번호>(#{pagination.currentPage}-1)* #{pagination.pageSize} And
      행번호<=#{pagination.currentPage} * #{pagination.pageSize}
ORDER BY 행번호 
		]]>

	</select>

	<!-- 버킷리스트 페이지 카운트 -->
	<select id="listCount" resultType="int" parameterType="hashmap"> 

	<![CDATA[
		SELECT COUNT(*)
		FROM [BucketList] b, [USER] u
		WHERE
	 	(
    	(#{pagination.srchType}= 0) OR /*검색조건이 없을때 */  /*검색조건이 없을때 */
	 	(#{pagination.srchType}= 1  AND CHARINDEX(#{pagination.srchText},title)>=1) OR /*타이틀검색*/
		(#{pagination.srchType}= 2 AND CHARINDEX(#{pagination.srchText},u.name)=1) 
	 	)  /*이름 검색*/
     
	 and 
		(
		(#{pagination.categoryType}=0) OR
		(#{pagination.categoryType}=1 AND[when]=#{pagination.when} and [who]=#{pagination.who} and [what]=#{pagination.what})
		) /*카테고리검색*/
	 and (
		(b.user_idx =#{user_idx}) OR  /*내가 쓴건 다보여야함*/
		(b.writer=0) OR  /*전체보기*/
		(b.writer=1 AND b.user_idx IN (select fromUser from Friend WHERE state=1  AND toUser=#{user_idx}) )OR /*친구보기*/
	    (b.writer=2 AND b.user_idx = #{user_idx})
	     )  /*나만보기*/
	   
	]]>

	</select>


	<!-- 전체 : 담기-버킷 카운트 업 -->
	<update id="countUp">

		UPDATE [BucketList]
		SET COUNT = COUNT + 1
		WHERE IDX =
		#{idx}

	</update>

	<!-- 전체 : 버킷 버튼 클릭 시 마이 버킷리스트에 추가 -->
	<insert id="addBucket" parameterType="hashmap">

		INSERT
		INTO
		[BucketList](title, contents, count, date, user_idx, writer, keyword ,[when],
		who, what, state)
		values(#{title}, #{contents}, 0, GETDATE(),
		#{user_idx}, #{writer},#{keyword},#{when}, #{who}, #{what}, 0)

	</insert>

	<!-- 전체 : 버킷 버튼 클릭 시 중복 담기 방지로 해당 버킷의 idx를 넣어줌 -->
	<!-- : parameterType을 haspmap으로 받아 여러개 인자를 받아옴 -->
	<select id="titleCheck" resultType="int" parameterType="hashmap">
		SELECT
		COUNT(1)
		FROM [BucketList]
		WHERE [title] = #{title} AND user_idx =
		#{userIdx}

	</select>

	<!-- ##버킷리스트 전체 목록 끝...## -->


	<!-- ##버킷리스트 내 목록(mylist.jsp) 시작...## -->
	<!-- 버킷리스트 내 목록 -->
	<select id="mylist" resultType="kr.ac.BucketTree.vo.BucketListVO"  parameterType="hashmap">

		<![CDATA[
SELECT *
FROM 
(
SELECT b.*,u.name, CASE #{pagination.orderType}
				   WHEN 1 THEN ROW_NUMBER() OVER(ORDER BY b.date desc)
				   WHEN 2 THEN ROW_NUMBER() OVER(ORDER BY b.count desc)
				END 행번호
				,(select top 1 idx from image where idx IN (SELECT image_idx FROM BucketList_Image where bucket_idx=b.idx)) as 'imageIdx'
				FROM [BucketList] b join [User] u ON b.user_idx=u.idx 
WHERE 
	 (
     (#{pagination.srchType}= 0) OR /*검색조건이 없을때 */  /*검색조건이 없을때 */
	 (#{pagination.srchType}= 1  AND CHARINDEX(#{pagination.srchText},title)>=1) OR /*타이틀검색*/
	 (#{pagination.srchType}= 2 AND CHARINDEX(#{pagination.srchText},u.name)=1) 
	 )  /*이름 검색*/
     
	 and 
		(
		(#{pagination.categoryType}=0) OR
		(#{pagination.categoryType}=1 AND[when]=#{pagination.when} and [who]=#{pagination.who} and [what]=#{pagination.what})
		) /*카테고리검색*/
	 and (
		  (b.user_idx =#{user_idx})
	      )  /*나만보기*/
) subquery
WHERE 행번호>(#{pagination.currentPage}-1)* #{pagination.pageSize} And
      행번호<=#{pagination.currentPage} * #{pagination.pageSize}
ORDER BY 행번호 
		]]>

	</select>
	<!-- 내버킷리스트 카운트 -->
	<select id="mylistCount" resultType="int" parameterType="hashmap"> 

	<![CDATA[
		SELECT COUNT(*)
		FROM [BucketList] b, [USER] u
		WHERE
	 	(
    	(#{pagination.srchType}= 0) OR /*검색조건이 없을때 */  /*검색조건이 없을때 */
	 	(#{pagination.srchType}= 1  AND CHARINDEX(#{pagination.srchText},title)>=1) OR /*타이틀검색*/
		(#{pagination.srchType}= 2 AND CHARINDEX(#{pagination.srchText},u.name)=1) 
	 	)  /*이름 검색*/
     
	 and 
		(
		(#{pagination.categoryType}=0) OR
		(#{pagination.categoryType}=1 AND[when]=#{pagination.when} and [who]=#{pagination.who} and [what]=#{pagination.what})
		) /*카테고리검색*/
	 and (
		(b.user_idx =#{user_idx})
	     )  /*나만보기*/
	   
	]]>
	</select>


	<!-- 버킷리스트 친구 추천 목록 -->
	<select id="recommendList" resultType="kr.ac.BucketTree.vo.BucketListVO">

		Select TOP 4 *
		FROM
		[BucketList]
		WHERE idx in (
		SELECT BucketList_idx
		FROM
		[RecommendBucketList]
		where toUser=#{user_idx} )
		ORDER BY NEWID()

	</select>

	<!-- 버킷리스트 관리자 추천 목록 -->
	<select id="adminRecommendList" resultType="kr.ac.BucketTree.vo.BucketListVO">

		SELECT TOP 4 *
		FROM
		[BucketList]
		WHERE user_idx != #{user_idx} AND WHAT IN (SELECT WHAT
		FROM(
		SELECT WHAT, ROW_NUMBER() OVER(ORDER BY COUNT(WHAT) DESC) row
		FROM BucketList
		WHERE user_Idx = #{user_idx} 
		GROUP BY WHAT
		)SUBQUERY
		WHERE row in (1,2,3)
		)
		and writer=0
		ORDER BY NEWID()
		
	</select>

	<!-- ##버킷리스트 내 목록 시작...## -->
	<select id="bucketShare_MyBucketList" resultType="kr.ac.BucketTree.vo.BucketListVO">

		SELECT
		b.*,what.what as what_name ,[when].[when] as when_name, who.who as
		who_name
		FROM [BucketList] b join Category_What what
		ON b.what =what.idx
		JOIN Category_WHO who
		ON b.who =who.idx
		JOIN Category_When [when]
		ON
		b.[when] =[when].idx
		where user_idx=#{user_idx}
	</select>

	<select id="bucketTree_MyBucketList" resultType="kr.ac.BucketTree.vo.BucketListVO">
		SELECT
		b.*,what.what as what_name ,[when].[when] as when_name, who.who as
		who_name
		FROM [BucketList] b join Category_What what
		ON b.what =what.idx
		JOIN Category_WHO who
		ON b.who =who.idx
		JOIN Category_When [when]
		ON
		b.[when] =[when].idx
		where user_idx=#{user_idx}
		and tree_idx =0;
	</select>



	<!-- ##버킷리스트 내 목록 시작...## -->
	<!-- 버킷리스트 등록 -->
	<insert id="insertBucketList" useGeneratedKeys="true"
		keyProperty="idx">
		INSERT INTO
		[BucketList](title,contents,count,date,user_idx,writer,x,y,keyword,[when],who,what,tree_idx,state)
		VALUES(#{title},#{contents},#{count},GETDATE(),#{user_idx},#{writer},#{x},#{y},#{keyword},#{when},#{who},#{what},0,0)

	</insert>

	<!-- 아이디로 버킷리스트 조회 -->
	<select id="bucket" resultType="kr.ac.BucketTree.vo.BucketListVO">

		SELECT *
		FROM [BucketList]
		WHERE
		IDX =#{idx}

	</select>
	<!-- Image 테이블 삽입 -->
	<insert id="insertbImage" useGeneratedKeys="true" keyProperty="idx">
		INSERT INTO [Image] (fileName, fileSize, fileTime, data)
		VALUES
		(#{fileName}, #{fileSize}, GETDATE(), #{data})
	</insert>

	<!-- BucketList_Image 테이블 삽입 -->
	<insert id="insertblImage">
		INSERT INTO [BucketList_Image] (bucket_idx,
		image_idx) VALUES
		(#{bucket_idx}, #{image_idx})
	</insert>

	<!-- Image 테이블 idx로 레코드 제거 -->
	<delete id="deleteImage">
		DELETE FROM [Image] WHERE idx=#{idx}
	</delete>

	<!-- 버킷리스트 idx에 해당하는 BucketList_image 레코드 제거 -->
	<delete id="deleteByBucketIdx">
		DELETE FROM [BucketList_Image] WHERE bucket_idx =
		#{bucket_idx}
	</delete>

	<!-- 아이디로 이미지 테이블 레코드 조회 -->
	<select id="selectById" resultType="kr.ac.BucketTree.vo.ImageVO">
		SELECT *
		FROM [Image]
		WHERE
		idx=#{idx}
	</select>

	<!-- 버킷아이디로 BucketList_image 테이블 image_idx 조회 -->
	<select id="selectByImageIdx" resultType="int">
		SELECT image_idx
		FROM
		[BucketList_Image]
		WHERE bucket_idx=#{idx}
	</select>


	<!-- 버킷리스트 수정 -->
	<insert id="editBucket">

		UPDATE BucketList SET contents=#{contents}, x =#{x}, y = #{y},keyword =#{keyword} ,who = #{who},[when]=#{when},what=#{what} WHERE idx=#{idx};
	</insert>
	<!-- 버킷리스트 삭제 -->
	<delete id="deleteBucket">
		DELETE FROM [BucketList] WHERE idx=#{idx}
	</delete>

	<!-- 댓글 등록 -->
	<insert id="insertComment" useGeneratedKeys="true" keyProperty="idx">
		INSERT INTO
		[BucketList_Comment](bucketList_idx,name,user_idx,date,contents,author)
		VALUES(#{bucketList_idx},#{name},#{user_idx},getDate(),#{contents},#{author})

	</insert>

	<!-- 댓글 전체 조회 -->
	<select id="selectComment" resultType="kr.ac.BucketTree.vo.CommentVO">
		SELECT * FROM
		[BucketList_Comment] WHERE bucketList_idx=#{idx}
	</select>


	<!-- 댓글 조회 -->
	<select id="selectByIdxComment" resultType="kr.ac.BucketTree.vo.CommentVO">
		SELECT * FROM
		[BucketList_Comment] WHERE idx=#{idx}
	</select>
	<!-- 댓글 삭제 -->
	<delete id="deleteComment">
		DELETE FROM [BucketList_Comment] WHERE idx=#{idx}
	</delete>

	<!-- 버킷 삭제시 댓글 삭제 -->
	<delete id="deleteBucComment">
		DELETE FROM [BucketList_Comment] WHERE
		bucketList_idx= #{idx}
	</delete>

	<!-- 댓글 수정 -->
	<update id="updateComment">
		UPDATE [BucketList_Comment] SET contents=#{contents}
		WHERE idx=#{idx}

	</update>
	<!-- 버킷리스트에 버킷트리 값 넣기 -->
	<update id="updateTreeidx">
		UPDATE [BucketList] SET tree_idx=#{tree_idx} WHERE
		idx=#{idx}
	</update>
</mapper>